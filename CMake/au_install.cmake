include(GNUInstallDirs)

install(
  DIRECTORY ${CMAKE_SOURCE_DIR}/SDK/Include/
  DESTINATION include
  FILES_MATCHING PATTERN "*.h?")

#install(TARGETS ${AU_INSTALL_TARGETS}
#  EXPORT ${AU_INSTALL_EXPORT_NAME}
#  LIBRARY DESTINATION ${AU_INSTALL_LIB_DIR}
#  ARCHIVE DESTINATION ${AU_INSTALL_ARCHIVE_DIR}
#  RUNTIME DESTINATION ${AU_INSTALL_BIN_DIR}
#  PUBLIC_HEADER DESTINATION ${AU_INSTALL_INCLUDE_DIR}
#    COMPONENT runtime
#)

if (UNIX)
  install(CODE "execute_process(COMMAND ldconfig)"
          COMPONENT runtime
  )
endif()

install(EXPORT ${AU_INSTALL_EXPORT_NAME}
  DESTINATION ${AU_INSTALL_CMAKE_CONFIG_DIR}
  NAMESPACE au::
  FILE ${AU_INSTALL_CMAKE_CONFIG_NAME}
)

install(
  DIRECTORY ${CMAKE_SOURCE_DIR}/CMake/
  DESTINATION ${AU_INSTALL_LIB_DIR}/cmake
  FILES_MATCHING PATTERN "*.cmake"
)

message("Installing... " ${AU_CONFIG_OUTPUT_FILE})
install(
  FILES ${AU_CONFIG_OUTPUT_FILE}
  DESTINATION ${AU_INSTALL_INCLUDE_DIR}/Au
)

#install(TARGETS console
#  RUNTIME COMPONENT runtime
#)

#
# CPACK configuration
#
set(CPACK_PACKAGE_NAME                  "${PACKAGE_NAME}")
set(CPACK_PACKAGE_DESCRIPTION           "AOCL Foundations")
set(CPACK_PACKAGE_VENDOR                "AMD")
set(CPACK_PACKAGE_DESCRIPTION_FILE      "${CMAKE_CURRENT_SOURCE_DIR}/Readme.md")
set(CPACK_RESOURCE_FILE_LICENSE         "${CMAKE_CURRENT_SOURCE_DIR}/License.txt")
set(CPACK_PACKAGE_INSTALL_DIRECTORY     "/usr/local")
set(CPACK_PACKAGE_VERSION_MAJOR         ${AU_VERSION_MAJOR})
set(CPACK_PACKAGE_VERSION_MINOR         ${AU_VERSION_MINOR})
set(CPACK_PACKAGE_VERSION_PATCH         ${AU_VERSION_PATCH})
set(CPACK_PACKAGE_VERSION               ${AU_VERSION_STRING})
 
include(CPack)
